// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file chainrpc/chainkit.proto (package chainrpc, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file chainrpc/chainkit.proto.
 */
export const file_chainrpc_chainkit: GenFile = /*@__PURE__*/
  fileDesc("ChdjaGFpbnJwYy9jaGFpbmtpdC5wcm90bxIIY2hhaW5ycGMiJQoPR2V0QmxvY2tSZXF1ZXN0EhIKCmJsb2NrX2hhc2gYASABKAwiJQoQR2V0QmxvY2tSZXNwb25zZRIRCglyYXdfYmxvY2sYASABKAwiFQoTR2V0QmVzdEJsb2NrUmVxdWVzdCJAChRHZXRCZXN0QmxvY2tSZXNwb25zZRISCgpibG9ja19oYXNoGAEgASgMEhQKDGJsb2NrX2hlaWdodBgCIAEoBSIrChNHZXRCbG9ja0hhc2hSZXF1ZXN0EhQKDGJsb2NrX2hlaWdodBgBIAEoAyIqChRHZXRCbG9ja0hhc2hSZXNwb25zZRISCgpibG9ja19oYXNoGAEgASgMMusBCghDaGFpbktpdBJBCghHZXRCbG9jaxIZLmNoYWlucnBjLkdldEJsb2NrUmVxdWVzdBoaLmNoYWlucnBjLkdldEJsb2NrUmVzcG9uc2USTQoMR2V0QmVzdEJsb2NrEh0uY2hhaW5ycGMuR2V0QmVzdEJsb2NrUmVxdWVzdBoeLmNoYWlucnBjLkdldEJlc3RCbG9ja1Jlc3BvbnNlEk0KDEdldEJsb2NrSGFzaBIdLmNoYWlucnBjLkdldEJsb2NrSGFzaFJlcXVlc3QaHi5jaGFpbnJwYy5HZXRCbG9ja0hhc2hSZXNwb25zZUIwWi5naXRodWIuY29tL2xpZ2h0bmluZ25ldHdvcmsvbG5kL2xucnBjL2NoYWlucnBjYgZwcm90bzM");

/**
 * @generated from message chainrpc.GetBlockRequest
 */
export type GetBlockRequest = Message<"chainrpc.GetBlockRequest"> & {
  /**
   * The hash of the requested block.
   *
   * @generated from field: bytes block_hash = 1;
   */
  blockHash: Uint8Array;
};

/**
 * Describes the message chainrpc.GetBlockRequest.
 * Use `create(GetBlockRequestSchema)` to create a new message.
 */
export const GetBlockRequestSchema: GenMessage<GetBlockRequest> = /*@__PURE__*/
  messageDesc(file_chainrpc_chainkit, 0);

/**
 * TODO(ffranr): The neutrino GetBlock response includes many
 * additional helpful fields. Consider adding them here also.
 *
 * @generated from message chainrpc.GetBlockResponse
 */
export type GetBlockResponse = Message<"chainrpc.GetBlockResponse"> & {
  /**
   * The raw bytes of the requested block.
   *
   * @generated from field: bytes raw_block = 1;
   */
  rawBlock: Uint8Array;
};

/**
 * Describes the message chainrpc.GetBlockResponse.
 * Use `create(GetBlockResponseSchema)` to create a new message.
 */
export const GetBlockResponseSchema: GenMessage<GetBlockResponse> = /*@__PURE__*/
  messageDesc(file_chainrpc_chainkit, 1);

/**
 * @generated from message chainrpc.GetBestBlockRequest
 */
export type GetBestBlockRequest = Message<"chainrpc.GetBestBlockRequest"> & {
};

/**
 * Describes the message chainrpc.GetBestBlockRequest.
 * Use `create(GetBestBlockRequestSchema)` to create a new message.
 */
export const GetBestBlockRequestSchema: GenMessage<GetBestBlockRequest> = /*@__PURE__*/
  messageDesc(file_chainrpc_chainkit, 2);

/**
 * @generated from message chainrpc.GetBestBlockResponse
 */
export type GetBestBlockResponse = Message<"chainrpc.GetBestBlockResponse"> & {
  /**
   * The hash of the best block.
   *
   * @generated from field: bytes block_hash = 1;
   */
  blockHash: Uint8Array;

  /**
   * The height of the best block.
   *
   * @generated from field: int32 block_height = 2;
   */
  blockHeight: number;
};

/**
 * Describes the message chainrpc.GetBestBlockResponse.
 * Use `create(GetBestBlockResponseSchema)` to create a new message.
 */
export const GetBestBlockResponseSchema: GenMessage<GetBestBlockResponse> = /*@__PURE__*/
  messageDesc(file_chainrpc_chainkit, 3);

/**
 * @generated from message chainrpc.GetBlockHashRequest
 */
export type GetBlockHashRequest = Message<"chainrpc.GetBlockHashRequest"> & {
  /**
   * Block height of the target best chain block.
   *
   * @generated from field: int64 block_height = 1;
   */
  blockHeight: bigint;
};

/**
 * Describes the message chainrpc.GetBlockHashRequest.
 * Use `create(GetBlockHashRequestSchema)` to create a new message.
 */
export const GetBlockHashRequestSchema: GenMessage<GetBlockHashRequest> = /*@__PURE__*/
  messageDesc(file_chainrpc_chainkit, 4);

/**
 * @generated from message chainrpc.GetBlockHashResponse
 */
export type GetBlockHashResponse = Message<"chainrpc.GetBlockHashResponse"> & {
  /**
   * The hash of the best block at the specified height.
   *
   * @generated from field: bytes block_hash = 1;
   */
  blockHash: Uint8Array;
};

/**
 * Describes the message chainrpc.GetBlockHashResponse.
 * Use `create(GetBlockHashResponseSchema)` to create a new message.
 */
export const GetBlockHashResponseSchema: GenMessage<GetBlockHashResponse> = /*@__PURE__*/
  messageDesc(file_chainrpc_chainkit, 5);

/**
 * ChainKit is a service that can be used to get information from the
 * chain backend.
 *
 * @generated from service chainrpc.ChainKit
 */
export const ChainKit: GenService<{
  /**
   * lncli: `chain getblock`
   * GetBlock returns a block given the corresponding block hash.
   *
   * @generated from rpc chainrpc.ChainKit.GetBlock
   */
  getBlock: {
    methodKind: "unary";
    input: typeof GetBlockRequestSchema;
    output: typeof GetBlockResponseSchema;
  },
  /**
   * lncli: `chain getbestblock`
   * GetBestBlock returns the block hash and current height from the valid
   * most-work chain.
   *
   * @generated from rpc chainrpc.ChainKit.GetBestBlock
   */
  getBestBlock: {
    methodKind: "unary";
    input: typeof GetBestBlockRequestSchema;
    output: typeof GetBestBlockResponseSchema;
  },
  /**
   * lncli: `chain getblockhash`
   * GetBlockHash returns the hash of the block in the best blockchain
   * at the given height.
   *
   * @generated from rpc chainrpc.ChainKit.GetBlockHash
   */
  getBlockHash: {
    methodKind: "unary";
    input: typeof GetBlockHashRequestSchema;
    output: typeof GetBlockHashResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_chainrpc_chainkit, 0);

